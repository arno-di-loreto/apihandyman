I"4	<p>Sooner or later, as an API evolve, you may have to introduce a dreaded “breaking change”.
But what is it actually? Should you always be fearful of it? And how to deal with it?</p>

<!--more-->

<h1 id="what-is-a-breaking-change">What is a breaking change</h1>

<p>A breaking change is non backward-compatible modification requiring consumers of an API to update their code in order to use the modified API.
There are many different ways to introduce breaking changes in APIs, some are obvious, some are not.</p>

<p>The most common obvious way to introduce a breaking is to rename or remove something in the interface contract.
Rename <code>GET /usrs</code> to <code>GET /users</code> or remove the <code>isAdmin</code> property from the User data model and there’s a huge risk that it will break some if not all of the API’s consumers.
But there are also less obvious interface contract’s breaking changes. Turning an optional parameter into a required one or adding new values to enumerations that consumer is supposed to interpret.</p>

<p>But there are less obvious and far more treacherous breaking changes:</p>

<blockquote class="blockquote">
    <p class="mb-0">With a sufficient number of users of an API, it does not matter what you promise in the contract: all observable behaviors of your system will be depended on by somebody.</p><footer class="blockquote-footer">
        <cite title="Source Title"><a href="https://www.hyrumslaw.com/">Hyrum Wright, Hyrum's Law</a></cite>
    </footer></blockquote>

<div class="image ">
    <figure class="figure">
        <img src="/images/handling-breaking-ch-ch-changes/xkcd.png" class="figure-img img-fluid" /><figcaption class="figure-caption"><a href="https://xkcd.com/1172/">XKCD: Workflow</a></figcaption></figure>
</div>

<h2 id="why-it-happens">Why it happens</h2>

<p>Breaking</p>

<h1 id="how-to-avoid-it">How to avoid it</h1>

<h2 id="dont-do-it">Don’t do it</h2>

<h2 id="add-add-and-add">Add, add and add</h2>

<h2 id="use-breaking-change-proof-design">Use breaking-change proof design</h2>

<h1 id="how-to-handle-it">How to handle it</h1>

<h2 id="evaluating-the-cost-of-change">Evaluating the cost of change</h2>

<h2 id="synchronized-modifications">Synchronized modifications</h2>

<h2 id="introduce-new-api-version-and-migrate">Introduce new API version and migrate</h2>

:ET