I"Öz<p>Getting, creating, updating or deleting multiple resources in a single API call is a common need in REST APIs. But how to achieve that in a consistent way accomodating how we work with a single resource and REST principles? This is what weâ€™ll see in this post.<!--more--></p>

<h1 id="working-with-a-single-resource">Working with a single resource</h1>

<p>Before talking about how to work with multiple resources all at once, letâ€™s see how to handle a single resource with a REST API.</p>

<h2 id="creating-a-resource">Creating a resource</h2>
<p>The common way of creating a <code>resource</code> is to do a <code>POST</code> request on <code>/resources</code>. The body of the request containing the resource to create.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">POST /resources HTTP/1.1

{
  &quot;some&quot;: &quot;some data&quot;,
  &quot;other&quot;: &quot;some other data&quot;
}</code></pre>
  </div>
</div>

<p>If everything is OK and the resource created, the responseâ€™s status to this request will be a <code>201 Created</code> and the responseâ€™s body will contain at least the ID (<code>id</code>) or the URL/URI (<code>href</code>) of the created resources. It may also contain the full resource itself.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">HTTP/1.1 201 Created

{
  &quot;id&quot;: &quot;ID&quot;,
  &quot;href&quot;: &quot;/resources/ID&quot;,
  &quot;some&quot;: &quot;some data&quot;,
  &quot;other&quot;: &quot;some other data&quot;
}</code></pre>
  </div>
</div>

<p>If thereâ€™s something wrong, the responseâ€™s status will be an error, for example a <code>400 Bad Request</code> because of some missing data and the responseâ€™s body will contain information about the error.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">HTTP/1.1 400 Bad Request

{
  &quot;message&quot;: &quot;missing some data&quot; 
}</code></pre>
  </div>
</div>

<h2 id="getting-a-resource">Getting a resource</h2>

<p>Once created a resource can be accessed with a <code>GET /resources/ID</code> request. If everything is OK, the server will return a <code>200 Accepted</code> and the resource. If thereâ€™s something wrong, it will return an error like <code>404 Not Found</code> if the resource does not exist or a <code>403 Forbidden</code> if the user is not allowed to access that resource.</p>

<h2 id="updating-a-resource">Updating a resource</h2>
<p>A <code>PATCH /resources/ID</code> request will update partially a resource:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">PATCH /resources HTTP/1.1

{
  &quot;other&quot;: &quot;modified data&quot;
}</code></pre>
  </div>
</div>

<p>If everything is OK, the server will return a OK status like <code>200 Accepted</code>, and just like with the <code>POST</code> request, the body may contain the updated resource.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">HTTP/1.1 200 Accepted

{
  &quot;id&quot;: &quot;ID&quot;,
  &quot;href&quot;: &quot;/resources/ID&quot;,
  &quot;some&quot;: &quot;some data&quot;,
  &quot;other&quot;: &quot;modified data&quot;
}</code></pre>
  </div>
</div>

<p>If thereâ€™s a problem, the server will return an error. This error could be, for example, a <code>404 Not Found</code> due to an invalid ID.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">HTTP/1.1 404 Not Found

{
  &quot;message&quot;: &quot;Resource &lt;ID&gt; not found&quot; 
}</code></pre>
  </div>
</div>

<h2 id="replacing-or-creating-a-resource">Replacing or creating a resource</h2>

<p>While a <code>PATCH /resources/ID</code> updates partially a resource, a <code>PUT /resources/ID</code> one will replace the resource. It may also create a new resource with the provided ID if it does not exist (and if it is allowed).</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">PUT /resources/ID HTTP/1.1

{
  &quot;some&quot;: &quot;some new data&quot;,
  &quot;other&quot;: &quot;some other new data&quot;
}</code></pre>
  </div>
</div>

<p>If everything is OK, the server will return a OK status. Depending on what happened the status may be, for example, a <code>200 Accepted</code> for a replacement of an existing resource or a <code>201 Created</code> when a resource has been created.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-txt code-copy"><code class="code-block">HTTP/1.1 200 Accepted

{
  &quot;id&quot;: &quot;ID&quot;,
  &quot;href&quot;: &quot;/resources/ID&quot;,
  &quot;some&quot;: &quot;some new data&quot;,
  &quot;other&quot;: &quot;some other new data&quot;
}</code></pre>
  </div>
</div>

<h2 id="deleting-a-resource">Deleting a resource</h2>
<p>And finally, to delete a resource, the request is <code>DELETE /resources/ID</code> without a body. If everything is OK, the server will return a <code>200 Accepted</code>. If thereâ€™s something wrong, it will return an error like <code>404 Not Found</code> if the resource does not exist or a <code>403 Forbidden</code> if the user is not allowed to delete that resource.</p>

<h2 id="but-why-explaining-all-that-i-want-to-work-with-multiple-resources">But why explaining all that? I want to work with multiple resources!</h2>

<p>To work with multiple resources with a REST APIs, you definitely need to know how to work properly with a single one. This quick reminder is there to show how we use the HTTP protocol in REST APIs to express what we want to do and what happened in <strong>a clear and consistent way</strong> when working with a single resource:</p>

<ul>
  <li>the URI define which resource we are using</li>
  <li>the HTTP method express what we want to do</li>
  <li>the HTTP response status explain what happened</li>
</ul>

<p>Now weâ€™ll see how continue to do so when working with multiple resources.</p>

<h1 id="same-action-on-resources-of-the-same-type">Same action on resources of the same type</h1>

<p>So what if I want to <code>PATCH /resources/ID1</code> and <code>PATCH /resources/ID2</code> at the same time? When it comes to do one thing with multiple resources of the same type all at once:</p>

<ul>
  <li>We send a request providing:
    <ul>
      <li>the <strong>type</strong> of <strong>all</strong> resources</li>
      <li>the <strong>action</strong> which will be applied to all these resources</li>
      <li>the <strong>identified</strong> data for <strong>all</strong> resources</li>
    </ul>
  </li>
  <li>We expect <strong>a</strong> response providing the result for <strong>each</strong> resource containing exactly the same information as if we had made a single request</li>
</ul>

<h2 id="a-request-containing-multiple-resources">A request containing multiple resources</h2>

<p>To tell the resources type weâ€™re working with, we will use the endpoint corresponding to a collection of resources, for example <code>/resources</code> or <code>/users/bob/friends</code>.</p>

<p>To identify the action we want to apply on the resources weâ€™ll simply use the matching HTTP verb:</p>

<ul>
  <li><code>GET /resources</code> to get multiple resources</li>
  <li><code>POST /resources</code> to create new resources</li>
  <li><code>PATCH /resources</code> to update multiple resources</li>
  <li><code>PUT /resources</code> to replace multiple resources</li>
  <li><code>DELETE /resources</code> to delete multiple resources</li>
</ul>

<p>How to provide resources data and identifier will slightly vary depending on the action.</p>

<h3 id="create-multiple-resources">Create multiple resources</h3>

<p>To provide all needed information for a creation, we have to send an array of items containing a unique identifier determined by the consumer (<code>id</code>) and the resourceâ€™s data (<code>body</code>):</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">[
  {
    &quot;id&quot;: &quot;CREATION1&quot;,
    &quot;body&quot;: {&quot;resource&#39;s&quot;: &quot;data&quot;}
  },
  {
    &quot;id&quot;: &quot;CREATION2&quot;,
    &quot;body&quot;: {&quot;resource&#39;s&quot;: &quot;data&quot;}
  }
]</code></pre>
  </div>
</div>

<p>It can also be done with a key/value map, the resourceâ€™s ID being the key and its data the value:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{
  &quot;CREATION1&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;},
  &quot;CREATION2&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;}
}</code></pre>
  </div>
</div>

<p>Receiving these data with a <code>POST /resources</code> request, the server will create the 2 resources provided. The provided <code>id</code> will be used in the response to identify the response corresponding to this resource.</p>

<h3 id="update-or-replace-multiple-resources">Update or replace multiple resources</h3>
<p>To update or replace multiple resources, itâ€™s exactly the same thing, besides the value of the resourceâ€™s id, which will be the one we would have use for a single resource (<code>/resources/ID</code>).</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{
  &quot;ID1&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;},
  &quot;ID2&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;}
}</code></pre>
  </div>
</div>

<p>Receiving these data with a <code>PATCH /resources</code> request, the server will execute both <code>PATCH /resources/ID1</code> and <code>PATCH /resources/ID2</code> (it works the same with <code>PUT</code>). Just like with <code>POST</code>, the provided ids will be used to identify each response.</p>

<h3 id="get-or-delete-multiple-resources">Get or delete multiple resources</h3>
<p>To get or delete multiple resources we will again use the resources ids but as a <code>GET</code> or <code>DELETE</code> request does not have a body, they will be provided in a query parameter like this <code>DELETE /resources?ids=ID1,ID2</code>.</p>

<h2 id="a-response-containing-responses">A response containing responses</h2>

<p>A response to such a request will have to contain exactly the same data we would have had doing single calls. We need to provide a response containing multiple responses, how can we do that?</p>

<blockquote>
  <p>One Status Code to bring them all and in the lightness bind them<br />
<em>The Lord of the HTTP Status Codes</em></p>
</blockquote>

<p>The 207 HTTP status code is exactly what weâ€™re looking for:</p>

<blockquote>
  <p>The 207 (Multi-Status) status code provides status for multiple independent operations</p>
</blockquote>

<p>This status has been defined by <a href="https://tools.ietf.org/html/rfc4918#section-11.1">RFC 4918</a> <em>HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)</em>. Hereâ€™s an example of a WebDAV 207 response when deleting some resources:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-xml code-copy"><code class="code-block">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
&lt;d:multistatus xmlns:d=&quot;DAV:&quot;&gt;
  &lt;d:response&gt;
    &lt;d:href&gt;http://www.example.com/container/resource3&lt;/d:href&gt;
    &lt;d:status&gt;HTTP/1.1 423 Locked&lt;/d:status&gt;
    &lt;d:error&gt;&lt;d:lock-token-submitted/&gt;&lt;/d:error&gt;
  &lt;/d:response&gt;
  &lt;d:response&gt;
    &lt;d:href&gt;http://www.example.com/container/resource4&lt;/d:href&gt;
    &lt;d:status&gt;HTTP/1.1 200 OK&lt;/d:status&gt;
  &lt;/d:response&gt;
&lt;/d:multistatus&gt;</code></pre>
  </div>
</div>

<div class="text-center">
      <figure class="figure">
        
        <img src="/images/api-design-tips-and-tricks-getting-creating-updating-or-deleting-multiple-resources-in-one-api-call/whatthehellisthat.gif" class="figure-img img-fluid" />
        
        
      </figure>
    </div>

<p>Oops, sorry for the XML, itâ€™s only to show that a WebDAV <em>207</em> response contains a list of response. Each of this response point to a resource (href) and contains also the response itself, how could it look in a less frightening JSON way:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">[
  {
    &quot;id&quot;: &quot;ID1&quot;,
    &quot;status&quot;: &quot;201&quot;,
    &quot;headers&quot;: [
      {&quot;header&#39;s name&quot;: &quot;header&#39;s value&quot;}
    ],
    &quot;body&quot;: { &quot;the&quot;: &quot;response&#39;s body&quot;}
  },
  {
    &quot;id&quot;: &quot;ID2&quot;,
    &quot;status&quot;: &quot;400&quot;,
    &quot;headers&quot;: [
      {&quot;header&#39;s name&quot;: &quot;header&#39;s value&quot;}
    ],
    &quot;body&quot;: { &quot;the&quot;: &quot;response&#39;s body&quot;}
  }
]</code></pre>
  </div>
</div>

<p>A 207 will response will contain a list of responses, each response containing:</p>

<ul>
  <li>An identifier (<code>id</code>) matching the one provided in the request</li>
  <li>The HTTP responseâ€™s data composed of a <code>status</code>, <code>headers</code> and a <code>body</code>. These data are exactly the same we would have received for a single call.</li>
</ul>

<p>Note that we can also use a map in which the keys are the responses identifiers:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{
  &quot;ID1&quot;: {
    &quot;status&quot;: &quot;201&quot;,
    &quot;headers&quot;: [
      {&quot;header&#39;s name&quot;: &quot;header&#39;s value&quot;}
    ],
    &quot;body&quot;: { &quot;the&quot;: &quot;response&#39;s body&quot;}
  },
  &quot;ID2&quot;: {
    &quot;status&quot;: &quot;400&quot;,
    &quot;headers&quot;: [
      {&quot;header&#39;s name&quot;: &quot;header&#39;s value&quot;}
    ],
    &quot;body&quot;: { &quot;the&quot;: &quot;response&#39;s body&quot;}
  }
}</code></pre>
  </div>
</div>

<p>We could even match request and response based on position in the list.</p>

<h2 id="two-levels-of-error">Two levels of error</h2>

<p>In that case, we must be aware that there are two types of errors, the one concerning one or more of the resources and the one concerning the <em>multiple</em> request itself.</p>

<p>For errors concerning the action on each resource), the HTTP status returned by the server will be a 207 and each sub-response will contains the status for each sub-request (as explained in previous paragraph).</p>

<p>For errors concerning the main request (misspelled query parameter for DELETE, or invalid body map/list structure for example), the server may return a <em>400 Bad Request</em> for example.</p>

<h2 id="single-and-multiple-creations-with-the-same-endpoint">Single and multiple creations with the same endpoint</h2>

<p>Note that <code>POST /resources</code> was supposed to be used to create a single resource. If we want to handle the single/multiple duality we have two options:</p>

<h3 id="use-a-listmap-for-both-case">Use a list/map for both case</h3>

<p>The input is exactly the same for 1 or more resources, we will only provide a single one item to create a single resource.</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{
  &quot;CREATION1&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;}
}</code></pre>
  </div>
</div>

<p>The serverâ€™s response should be always be the one described earlier for multiple creations even if thereâ€™s only a single item.</p>

<h3 id="accept-both-a-listmap-and-single-object">Accept both a list/map and single object</h3>

<p>The input for a single resource contains only the resourceâ€™s data:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{&quot;resource&#39;s&quot;: &quot;data&quot;}</code></pre>
  </div>
</div>

<p>The server response will be the one expected for a single creation.</p>

<p>The input for multiple resource contains a list/map:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">{
  &quot;CREATION1&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;}
  &quot;CREATION2&quot; : {&quot;resource&#39;s&quot;: &quot;data&quot;}
}</code></pre>
  </div>
</div>

<p>The server response will be the one expected for a multiple creations as seen earlier.</p>

<h1 id="different-actions-on-resources-of-the-same-type">Different actions on resources of the same type</h1>
<p>What if we want to <code>DELETE /resources/ID1</code> and <code>PATCH /resources/ID2</code> at the same time? As it is an action that impacts the data in various way we should use the <code>POST</code> HTTP verb. Concerning the URI, we have two options, use <code>/resources</code> or create a specific resources for this use case like <code>/resource-modifications</code> for example. The request will be then something like <code>POST /resources</code> or <code>POST /resource-modifications</code> and we will have to provide the action (<code>method</code>) for each resource:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">[
  {
    &quot;id&quot;: &quot;ID1&quot;,
    &quot;method&quot;: &quot;DELETE&quot;
  },
  {
    &quot;id&quot;: &quot;ID2&quot;,
    &quot;method&quot;: &quot;PATCH&quot;,
    &quot;body&quot;: {&quot;resource&#39;s&quot;: &quot;data&quot;}
  }
]</code></pre>
  </div>
</div>

<p>The server will do <code>DELETE /resources/ID1</code> and <code>PATCH /resources/ID2</code> and the response will be a <em>207</em> using the structure using the provided <code>id</code> as seen previously in his post.</p>

<h1 id="different-actions-on-resources-of-different-types">Different actions on resources of different types</h1>
<p>What if I want to do <code>DELETE /resources/ID1</code> and <code>PATCH /another-resources/ID2</code> at the same time?</p>

<div class="text-center">
      <figure class="figure">
        
        <img src="/images/api-design-tips-and-tricks-getting-creating-updating-or-deleting-multiple-resources-in-one-api-call/waitwhat.gif" class="figure-img img-fluid" />
        
        
      </figure>
    </div>

<p>This is really nasty and definitely not REST, but it can be useful for <a href="https://www.infoq.com/articles/api-facades">backend for frontend or experience API</a> for example.</p>

<p>To do that weâ€™ll need to <code>POST</code> data on a specific endpoint which could something like <code>/batch</code>, <code>/bulk</code> or even <code>/</code> and we will have to add a <code>uri</code> and replace the <code>id</code> value by something provided by the consumer:</p>

<div class="card card-code text-white bg-dark border-dark">
  
  <div class="card-header">
    <div class="row m-0">
      <div class="col align-self-center">
        <p class="m-0 title"></p>
      </div>
      <div class="col col-auto pr-0">
        <div class="btn-group" role="group" aria-label="code snippet control">
          <a role="button" class="btn btn-secondary code-copy-btn border-0 rounded-0" aria-label="copy" data-toggle="tooltip" data-placement="top" title="Copy"><img class="btn-icon" src="/images/commons/icons/copy.svg" /></a>
          
        </div>
      </div>
    </div>
  </div>
  <div class="card-body">
    <pre class="language-json code-copy"><code class="code-block">[
  {
    &quot;id&quot;: &quot;ACTION1&quot;,
    &quot;uri&quot;: &quot;/resources/ID1&quot;,
    &quot;method&quot;: &quot;DELETE&quot;
  },
  {
    &quot;id&quot;: &quot;ACTION2&quot;,
    &quot;uri&quot;: &quot;/another-resources/ID2&quot;,
    &quot;method&quot;: &quot;PATCH&quot;,
    &quot;body&quot;: {&quot;resource&#39;s&quot;: &quot;data&quot;}
  }
  ,
  {
    &quot;id&quot;: &quot;ACTION3&quot;,
    &quot;uri&quot;: &quot;/resources&quot;,
    &quot;method&quot;: &quot;POST&quot;,
    &quot;body&quot;: {&quot;resource&#39;s&quot;: &quot;data&quot;}
  }
]</code></pre>
  </div>
</div>

<p>Actions number 1 is <code>DELETE /resources/ID1</code> and its result will be identified in the 207 response by the id <code>ACTION1</code>.</p>

<p>To see a complete example you should take a look at <a href="https://developers.facebook.com/docs/graph-api/making-multiple-requests">Facebookâ€™s Graph API batch endpoint</a> documentation. Note that this batch endpoint match request/response based on index and does far more than just processing a bunch of request.</p>
:ET