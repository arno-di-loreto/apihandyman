name: Publish to Github Pages

on:
  push:
    branches: [ main ]
  #schedule:
  #  - cron: "0 12 * * WED"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    env:
      # PUBLISH_BRANCH: gh-pages
      PUBLISH_BRANCH_FOLDER: _site
    runs-on: ubuntu-latest
    steps:
    - name: ‚¨áÔ∏è Checkout current branch
      uses: actions/checkout@main
      with:
          fetch-depth: 1
    - name: üë∑üèª‚Äç‚ôÇÔ∏è Build with jekyll/builder container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll \
        -v ${{ github.workspace }}/${{env.PUBLISH_BRANCH_FOLDER}}:/srv/jekyll/_site \
        jekyll/builder:4.1.0 /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build"
    - name: üì¶ Preparing and uploading package
      uses: actions/upload-pages-artifact@main
      with:
        path: ${{env.PUBLISH_BRANCH_FOLDER}}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: üöÄ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1    
  clear_cdn_cache:
    needs: [ deploy ]
    env:
      POSTMAN_COLLECTION_BRANCH: main
      POSTMAN_COLLECTION_FOLDER: scripts
      CLOUDFLARE_WEBSITE: apihandyman.io
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Download Cloudflare Clear Cache Postman collection
        uses: actions/checkout@main
        with:
          ref: ${{env.POSTMAN_COLLECTION_BRANCH}}
          fetch-depth: 1
      - name: üí• Clear Cloudflare cache
        run: |
          docker run \
          -v ${{ github.workspace }}/${{env.POSTMAN_COLLECTION_FOLDER}}:/etc/newman \
          -t postman/newman:alpine run \
          --global-var token=${{secrets.CLOUDFLARE_TOKEN}} \
          --global-var website=${{env.CLOUDFLARE_WEBSITE}} \
          cloudflare-clearcache.postman_collection.json
